plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "6.2.2"
    id "org.assertj.generator" version "0.0.6b"


}
import java.util.Properties
def props = new Properties()
file('src/main/resources/application.properties').withInputStream {
    props.load(it)
}
def datasourceurl = props['spring.datasource.url']
def datasourceuser = props['spring.datasource.username']
def datasourcepassword = props['spring.datasource.password']


group = 'by.pochepko.hes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.mapstruct:mapstruct:1.3.1.Final"
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'
    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

}
flyway {
    url = datasourceurl
    user = datasourceuser
    password = datasourcepassword

}
tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
test {
    useJUnitPlatform()
}
